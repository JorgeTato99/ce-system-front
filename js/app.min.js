/// GLOBAL VARS

let d = document,
   c = console.log,
   urlBase = 'https://jorgetato.com/backcesystem/api'



/// INIT APPLICATION MODULES after user data check and loaded files
function initModels(){
   UsuariosComunes()
}

/// USER DATA DISPLAY SIDEBAR
let usuarioDisplayNombre = d.querySelector('#usuarioDisplayData')
let nombreUsuarioWrapper = d.querySelector('#nombreUsuarioWrapper')
let btnLogout = d.querySelector('#btnLogout')


/// Display user data in sidebar
function usuarioDisplayData( data = {} ){
   let span = nombreUsuarioWrapper.querySelector('.nombreUsuarioSpan')
   span.innerHTML = data.nombreDisplay
}


/// LOGIN
function loginFormComponent(){
   return `
   <form class="formS1">
      <h2 class="textS1">Entrar</h2>
      <div class="fW"><p>Nombre Usuario</p><input type="text" name="nU" value="" required></div>
      <div class="fW"><p>Contraseña</p><input type="password" name="pd" value=""></div>
      <div class="messageForm hidden"></div>
      <div class="btnsActionsForm"><input type="submit" value="Entrar"></div>
   </form>
   `
}

let portada = d.querySelector("#portada")
let formPortadaWrapper = d.querySelector(".formPortadaWrapper")
formPortadaWrapper.innerHTML = loginFormComponent()
let formPortada = portada.querySelector(".formS1")
let messageFormPortada = portada.querySelector(".messageForm")

formPortada.addEventListener("submit", function(e){
   e.preventDefault()
   let query = { nombreUsuario : formPortada.nU.value, password : formPortada.pd.value }

   messageFormPortada.classList.remove("hidden", "error", "success", "show")
   messageFormPortada.innerHTML = "Conectando..."
   /// get end point data url with query parameters
   APIendPointData( urlBase + '/usuarios/validar_usuario.php', query )
   .then(data => {
      c(data)
      messageFormPortada.innerHTML = data.message
      if( data.usuario ){
         messageFormPortada.classList.add("success", "show")
         /// set localStorage values
         localStorage.setItem("nombreUsuario", data.usuario)
         localStorage.setItem("password", formPortada.pd.value)
         localStorage.setItem("rol", data.rol)
         /// User display
         usuarioDisplayData( data = { nombreDisplay: localStorage.getItem("nombreUsuario") } )
         /// Hide portada
         setTimeout( function(){ portada.classList.add("hidden") }, 500 )
      }else{
         messageFormPortada.classList.add("error", "show")
      }
      setTimeout( function(){ messageFormPortada.classList.add("hidden") }, 3000 )
   })
})

/// LOGOUT
function logout(){
   /// set null user data
   localStorage.clear();
   /// Display portada
   setTimeout( function(){
      portada.classList.remove("hidden")
      portada.classList.add("show")
   }, 100 )
}

btnLogout.onclick = async () => {
   if( await alertModal({ messageText: '¿Desea salir del sistema?', btnOKText: 'Sí', btnCancelText:'No' }) ){
      logout()
   }
}



/// ROUTER SECTIONS NAVIGATION

function routerApp( dataSection ){
   /// check #hash value and display section
   d.querySelectorAll(".section").forEach(function(sec){
      if(dataSection){ 
         sec.id === dataSection ? sec.classList.remove("hidden") : sec.classList.add("hidden")
      }else{
         location.hash = "#usuariossistema"
      }
   })
   /// Menu active
   d.querySelectorAll(".navMainSubmenuTitle").forEach(function(sec){
      if(dataSection){ 
         sec.getAttribute("data-section") === dataSection ? sec.classList.add("active") : sec.classList.remove("active")
         // c(sec.getAttribute("data-section"))
      }else{
         
      }
   })
}
/// Call when #hash change
window.addEventListener("hashchange", function(){ routerApp( location.hash.slice(1) ) });



/// RUN WHEN ALL FILES LOADED
window.addEventListener("load", function() {
   /// CHECK IF USER DATA EXIST
   if( localStorage.getItem("nombreUsuario") !== null ){
      /// hidde portada
      portada.classList.add("hidden")
      /// User display
      usuarioDisplayData( data = { nombreDisplay: localStorage.getItem("nombreUsuario") } )
      /// init Aplication modules and router
      initModels()
      routerApp( location.hash.slice(1) )
   }else{
      /// Show portada
      portada.classList.remove("hidden")
   }
})

c( "usuario:", localStorage.getItem("nombreUsuario"), "rol: ", localStorage.getItem("rol"))